version: '3.9'

services:
  postgres_db:
    image: postgres:15
    container_name: job_manager_db
    volumes:
      - ../job_manager_db:/var/lib/postgresql/data
    env_file:
      - .env
    ports:
      - "${DB_OUT_PORT}:${DB_PORT}"
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 256M
        reservations:
          cpus: '0.01'
          memory: 128M
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${POSTGRES_USER}" ]
      interval: 10s
      retries: 5

  web:
    build: .
    container_name: job_manager_app
    privileged: true
    command: >
      sh -c './manage.py migrate && if [ ! -f /app/.installed ]; then ./manage.py collectstatic --noinput && ./manage.py 
      createsuperuser --noinput && touch /app/.installed && mkdir /app/temp; fi && gunicorn 
      --bind 0.0.0.0:8000 job_manager_proj.wsgi:application'
    volumes:
      - .:/app
    expose:
      - 8000
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 256M
        reservations:
          cpus: '0.01'
          memory: 128M
    depends_on:
      postgres_db:
        condition: service_healthy

  redis:
    image: redis
    container_name: job_manager_broker
    expose:
      - 6379

  celery_worker:
    build: .
    container_name: job_manager_celery_worker
    command: >
      bash -c "celery -A job_manager_proj worker -l info && celery -A job_manager_proj beat -l \ 
      INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler"
    volumes:
      - .:/app
    depends_on:
      postgres_db:
        condition: service_healthy

  nginx:
    image: nginx:1.24
    container_name: job_manager_nginx
    volumes:
      - ./nginx-conf.d:/etc/nginx/conf.d
      - ../job_manager_log/nginx:/var/log/nginx
      - ./static:/var/www/html/static
    ports:
      - 80:80
    depends_on:
      - web