version: '3.9'

services:
  postgres_db:
    image: postgres:15
    container_name: jm_postgres
    volumes:
      - "../data/postgresql:/var/lib/postgresql/data"
    env_file:
      - .env
    ports:
      - "${DB_OUT_PORT}:${DB_PORT}"
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 256M
        reservations:
          cpus: '0.01'
          memory: 128M
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${POSTGRES_USER}" ]
      interval: 10s
      retries: 5

  app:
    build: .
    container_name: jm_app
    privileged: true
    command: >
      sh -c './manage.py migrate && if [ ! -f /app/.installed ]; then ./manage.py collectstatic --noinput && ./manage.py 
      createsuperuser --noinput && touch /app/.installed && mkdir /app/temp; fi && gunicorn 
      --bind 0.0.0.0:8000 job_manager_proj.wsgi:application'
    volumes:
      - .:/app
    expose:
      - 8000
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M
    depends_on:
      postgres_db:
        condition: service_healthy

  redis:
    image: redis
    container_name: jm_broker
    expose:
      - 6379

  celery_worker:
    build: .
    container_name: jm_celery_worker
    command: >
      bash -c "celery -A job_manager_proj worker -l info && celery -A job_manager_proj beat -l \ 
      INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler"
    volumes:
      - .:/app
    depends_on:
      postgres_db:
        condition: service_healthy

  nginx:
    image: nginx:1.24
    container_name: jm_nginx
    volumes:
      - ./nginx-conf.d:/etc/nginx/conf.d
      - ../log/nginx:/var/log/nginx
      - ./static:/var/www/html/static
    ports:
      - "80:80"
    depends_on:
      - app

  flower:
    image: mher/flower
    container_name: jm_flower
    environment:
      - CELERY_BROKER_URL=redis://redis:6379
      - FLOWER_PORT=5555
    ports:
      - "5555:5555"

  prometheus:
    image: prom/prometheus:latest
    container_name: jm_prometheus
    ports:
      - "9090:9090"
    volumes:
      - "./prometheus.yml:/etc/prometheus/prometheus.yml"
      - "../data/prometheus:/prometheus"

  grafana:
    image: grafana/grafana:latest
    container_name: jm_grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - "../data/grafana:/var/lib/grafana"
    env_file:
      - .env